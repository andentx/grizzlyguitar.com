/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type Tools = {
  _id: string;
  _type: "tools";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  index?: number;
  title?: string;
  description?: string;
  url?: string;
  linkText?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  imageAltText?: string;
};

export type Service = {
  _id: string;
  _type: "service";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  index?: number;
  title?: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  price?: string;
};

export type ServicesMenuSection = {
  _id: string;
  _type: "servicesMenuSection";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  index?: number;
  title?: string;
  subtitle?: string;
  menuItems?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "service";
  }>;
  images?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
    _key: string;
  }>;
};

export type LandingFeaturedCategories = {
  _id: string;
  _type: "landingFeaturedCategories";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  imageAltText?: string;
  url?: string;
};

export type IndexWhatWeDo = {
  _id: string;
  _type: "indexWhatWeDo";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  index?: number;
  title?: string;
  description?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  imageAltText?: string;
};

export type BlogPost = {
  _id: string;
  _type: "blogPost";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  mainImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  publishedAt?: string;
  excerpt?: string;
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  author?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "author";
  };
};

export type BlockContent = Array<
  | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
      listItem?: "bullet";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }
  | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    }
>;

export type Author = {
  _id: string;
  _type: "author";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  bio?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
};

export type AboutWhatIOffer = {
  _id: string;
  _type: "aboutWhatIOffer";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  index?: number;
  title?: string;
  description?: string;
  url?: string;
  linkText?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  imageAltText?: string;
};

export type AboutQuestionsAndAnswers = {
  _id: string;
  _type: "aboutQuestionsAndAnswers";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  index?: number;
  question?: string;
  answer?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
};

export type AboutMainImage = {
  _id: string;
  _type: "aboutMainImage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  imageAltText?: string;
};

export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type AllSanitySchemaTypes =
  | Tools
  | Service
  | ServicesMenuSection
  | LandingFeaturedCategories
  | IndexWhatWeDo
  | BlogPost
  | BlockContent
  | Author
  | AboutWhatIOffer
  | AboutQuestionsAndAnswers
  | AboutMainImage
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | SanityImageHotspot
  | SanityImageCrop
  | SanityFileAsset
  | SanityImageAsset
  | SanityImageMetadata
  | Geopoint
  | Slug
  | SanityAssetSourceData;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./src/sanity/lib/queries.ts
// Variable: WHAT_WE_DO_FEATURES_QUERY
// Query: *[_type == "indexWhatWeDo"] | order(index asc) {    _id,    index,    title,    description,    image {      asset->{        url      }    },    imageAltText  }
export type WHAT_WE_DO_FEATURES_QUERYResult = Array<{
  _id: string;
  index: number | null;
  title: string | null;
  description: string | null;
  image: {
    asset: {
      url: string | null;
    } | null;
  } | null;
  imageAltText: string | null;
}>;
// Variable: ABOUT_MAIN_IMAGE_QUERY
// Query: *[_type == "aboutMainImage"] {    _id,    image {      asset->{        url      }    },    imageAltText  }
export type ABOUT_MAIN_IMAGE_QUERYResult = Array<{
  _id: string;
  image: {
    asset: {
      url: string | null;
    } | null;
  } | null;
  imageAltText: string | null;
}>;
// Variable: ABOUT_QUESTIONS_AND_ANSWERS_QUERY
// Query: *[_type == "aboutQuestionsAndAnswers"] | order(index asc) {    _id,    index,    question,    answer  }
export type ABOUT_QUESTIONS_AND_ANSWERS_QUERYResult = Array<{
  _id: string;
  index: number | null;
  question: string | null;
  answer: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
}>;
// Variable: ABOUT_WHAT_I_OFFER_QUERY
// Query: *[_type == "aboutWhatIOffer"] | order(index asc) {    _id,    index,    title,    description,    url,    linkText,    image {      asset->{        url      }    },    imageAltText  }
export type ABOUT_WHAT_I_OFFER_QUERYResult = Array<{
  _id: string;
  index: number | null;
  title: string | null;
  description: string | null;
  url: string | null;
  linkText: string | null;
  image: {
    asset: {
      url: string | null;
    } | null;
  } | null;
  imageAltText: string | null;
}>;
// Variable: SERVICES_MENU_SECTION_QUERY
// Query: *[_type == "servicesMenuSection"] | order(index asc) {    _id,    index,    title,    subtitle,    menuItems[]->{      _id,      title,      description,    }  }
export type SERVICES_MENU_SECTION_QUERYResult = Array<{
  _id: string;
  index: number | null;
  title: string | null;
  subtitle: string | null;
  menuItems: Array<{
    _id: string;
    title: string | null;
    description: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
  }> | null;
}>;
// Variable: SERVICES_QUERY
// Query: *[_type == "servicesMenuSection"] | order(index asc) {    _id,    index,    title,    subtitle,    menuItems[]->{      _id,      title,      description,      price    },    images[] {      asset->{        url      },      alt    }  }
export type SERVICES_QUERYResult = Array<{
  _id: string;
  index: number | null;
  title: string | null;
  subtitle: string | null;
  menuItems: Array<{
    _id: string;
    title: string | null;
    description: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    price: string | null;
  }> | null;
  images: Array<{
    asset: {
      url: string | null;
    } | null;
    alt: null;
  }> | null;
}>;
// Variable: BLOG_POSTS_QUERY
// Query: *[_type == "blogPost"] | order(publishedAt asc) {    _id,    title,    slug,    mainImage {      asset->{        url      }    },    publishedAt,    excerpt,    author->{      name,      image {        asset->{          url        }      }    }  }
export type BLOG_POSTS_QUERYResult = Array<{
  _id: string;
  title: string | null;
  slug: Slug | null;
  mainImage: {
    asset: {
      url: string | null;
    } | null;
  } | null;
  publishedAt: string | null;
  excerpt: string | null;
  author: {
    name: string | null;
    image: {
      asset: {
        url: string | null;
      } | null;
    } | null;
  } | null;
}>;
// Variable: BLOG_POST_QUERY
// Query: *[_type == "blogPost" && slug.current == $slug][0] {    _id,    title,    slug,    mainImage {      asset->{        url      }    },    publishedAt,    excerpt,    content,    author->{      name,      image {        asset->{          url        }      },      bio    },    "next": *[_type == "blogPost" && publishedAt > ^.publishedAt] | order(publishedAt asc)[0] {      title,      slug    },    "previous": *[_type == "blogPost" && publishedAt < ^.publishedAt] | order(publishedAt desc)[0] {      title,      slug    }  }
export type BLOG_POST_QUERYResult = {
  _id: string;
  title: string | null;
  slug: Slug | null;
  mainImage: {
    asset: {
      url: string | null;
    } | null;
  } | null;
  publishedAt: string | null;
  excerpt: string | null;
  content: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
  author: {
    name: string | null;
    image: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    bio: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
  } | null;
  next: {
    title: string | null;
    slug: Slug | null;
  } | null;
  previous: {
    title: string | null;
    slug: Slug | null;
  } | null;
} | null;
// Variable: LANDING_FEATURED_CATEGORIES_QUERY
// Query: *[_type == "landingFeaturedCategories"] {    _id,    title,    image {      asset->{        url      }    },    imageAltText,    url  }
export type LANDING_FEATURED_CATEGORIES_QUERYResult = Array<{
  _id: string;
  title: string | null;
  image: {
    asset: {
      url: string | null;
    } | null;
  } | null;
  imageAltText: string | null;
  url: string | null;
}>;
// Variable: TOOLS_QUERY
// Query: *[_type == "tools"] | order(index asc) {    _id,    index,    title,    description,    url,    linkText,    image {      asset->{        url      }    },    imageAltText  }
export type TOOLS_QUERYResult = Array<{
  _id: string;
  index: number | null;
  title: string | null;
  description: string | null;
  url: string | null;
  linkText: string | null;
  image: {
    asset: {
      url: string | null;
    } | null;
  } | null;
  imageAltText: string | null;
}>;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    '\n  *[_type == "indexWhatWeDo"] | order(index asc) {\n    _id,\n    index,\n    title,\n    description,\n    image {\n      asset->{\n        url\n      }\n    },\n    imageAltText\n  }\n': WHAT_WE_DO_FEATURES_QUERYResult;
    '\n  *[_type == "aboutMainImage"] {\n    _id,\n    image {\n      asset->{\n        url\n      }\n    },\n    imageAltText\n  }\n': ABOUT_MAIN_IMAGE_QUERYResult;
    '\n  *[_type == "aboutQuestionsAndAnswers"] | order(index asc) {\n    _id,\n    index,\n    question,\n    answer\n  }\n': ABOUT_QUESTIONS_AND_ANSWERS_QUERYResult;
    '\n  *[_type == "aboutWhatIOffer"] | order(index asc) {\n    _id,\n    index,\n    title,\n    description,\n    url,\n    linkText,\n    image {\n      asset->{\n        url\n      }\n    },\n    imageAltText\n  }\n': ABOUT_WHAT_I_OFFER_QUERYResult;
    '\n  *[_type == "servicesMenuSection"] | order(index asc) {\n    _id,\n    index,\n    title,\n    subtitle,\n    menuItems[]->{\n      _id,\n      title,\n      description,\n    }\n  }\n': SERVICES_MENU_SECTION_QUERYResult;
    '\n  *[_type == "servicesMenuSection"] | order(index asc) {\n    _id,\n    index,\n    title,\n    subtitle,\n    menuItems[]->{\n      _id,\n      title,\n      description,\n      price\n    },\n    images[] {\n      asset->{\n        url\n      },\n      alt\n    }\n  }\n': SERVICES_QUERYResult;
    '\n  *[_type == "blogPost"] | order(publishedAt asc) {\n    _id,\n    title,\n    slug,\n    mainImage {\n      asset->{\n        url\n      }\n    },\n    publishedAt,\n    excerpt,\n    author->{\n      name,\n      image {\n        asset->{\n          url\n        }\n      }\n    }\n  }\n': BLOG_POSTS_QUERYResult;
    '\n  *[_type == "blogPost" && slug.current == $slug][0] {\n    _id,\n    title,\n    slug,\n    mainImage {\n      asset->{\n        url\n      }\n    },\n    publishedAt,\n    excerpt,\n    content,\n    author->{\n      name,\n      image {\n        asset->{\n          url\n        }\n      },\n      bio\n    },\n    "next": *[_type == "blogPost" && publishedAt > ^.publishedAt] | order(publishedAt asc)[0] {\n      title,\n      slug\n    },\n    "previous": *[_type == "blogPost" && publishedAt < ^.publishedAt] | order(publishedAt desc)[0] {\n      title,\n      slug\n    }\n  }\n': BLOG_POST_QUERYResult;
    '\n  *[_type == "landingFeaturedCategories"] {\n    _id,\n    title,\n    image {\n      asset->{\n        url\n      }\n    },\n    imageAltText,\n    url\n  }\n': LANDING_FEATURED_CATEGORIES_QUERYResult;
    '\n  *[_type == "tools"] | order(index asc) {\n    _id,\n    index,\n    title,\n    description,\n    url,\n    linkText,\n    image {\n      asset->{\n        url\n      }\n    },\n    imageAltText\n  }\n': TOOLS_QUERYResult;
  }
}
